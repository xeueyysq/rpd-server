version: '3.8'

services:
  db:
    image: postgres:12.20-alpine3.20
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-admin}
      POSTGRES_DB: ${DB_NAME:-Rpd}
    ports:
      - "5432:5432"
    networks:
      - dokploy-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 10s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  rpd-server:
    build: .
    environment:
      PORT: ${PORT:-8000}
      CLIENT_URL: ${CLIENT_URL:-http://localhost}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
      DB_HOST: db
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-admin}
      DB_NAME: ${DB_NAME:-Rpd}
      DB_PORT: ${DB_PORT:-5432}
    ports:
      - "8000:8000"
    networks:
      - dokploy-network
    depends_on:
      - db
    restart: unless-stopped

  react-app:
    build: ../rpd-client-ts
    ports:
      - '80:80'
    networks:
      - dokploy-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  dokploy-network: